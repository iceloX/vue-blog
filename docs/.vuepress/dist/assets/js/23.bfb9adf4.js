(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{543:function(t,s,a){"use strict";a.r(s);var n=a(6),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"静态链表"}},[t._v("静态链表")]),t._v(" "),a("p",[t._v("单链表：各个节点在内存中星罗棋布、散乱存储\n静态链表：分配一整片凉鞋的内存空间，各个节点集中安置")]),t._v(" "),a("p",[t._v("如下图：")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://image.icelo.cn/%E9%9D%99%E6%80%81%E9%93%BE%E8%A1%A8.png#mirages-width=538&mirages-height=633&mirages-cdn-type=1",alt:""}})]),t._v(" "),a("h3",{attrs:{id:"定义"}},[t._v("定义")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 定义一个静态链表")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("define")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token macro-name"}},[t._v("MaxSize")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token expression"}},[a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v("\t\t")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 静态链表的最大长度")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Node")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 静态链表的定义")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" data"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 静态链表类型(int)的定义")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" next"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 下一个元素数组的下标")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("如下可以使用数组的形式声明一个静态数组")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Node")]),t._v(" a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("MaxSize"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 数组a作为静态链表")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typedef")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Node")]),t._v(" SLinkList"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("MaxSize"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("书上使用的方式定义一个静态链表")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typedef")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 静态链表类型定义")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" data"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 数据元素")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" next"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 指向下一个元素的数组下标")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("SLinkList"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("MaxSize"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h3",{attrs:{id:"初始化"}},[t._v("初始化")]),t._v(" "),a("p",[t._v("初始化静态链表\n把a[0]的next设置为-1（假设规定数组下标为-1的该链表的表尾节点）\n把其他的next设置为一个特色的值来表示节点空闲，如-2（放置空闲节点有脏数据）")]),t._v(" "),a("h3",{attrs:{id:"查找"}},[t._v("查找")]),t._v(" "),a("p",[t._v("从头节点出发挨个向后面遍历节点   O(n)")]),t._v(" "),a("p",[t._v("插入位序为i的节点")]),t._v(" "),a("ul",[a("li",[t._v("找到一个空的节点，存入数据元素")]),t._v(" "),a("li",[t._v("从头节点出发找到位序为i-1的节点")]),t._v(" "),a("li",[t._v("修改新节点next")]),t._v(" "),a("li",[t._v("修改i-1号节点的next")])]),t._v(" "),a("h3",{attrs:{id:"删除"}},[t._v("删除")]),t._v(" "),a("p",[t._v("① 从头节点出发找到前驱节点\n② 修改前驱节点的游标\n③ 被删除节点next设置为空（如-2）")]),t._v(" "),a("h3",{attrs:{id:"总结"}},[t._v("总结")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("静态链表：用数组的方式实现的链表")]),t._v(" "),a("ul",[a("li",[t._v("优点：增、删参数不需要大量移动元素")]),t._v(" "),a("li",[t._v("缺点：不能随机存储，只能从头开始一次往后查找：容量固定不变")])])]),t._v(" "),a("li",[a("p",[t._v("使用场景：")]),t._v(" "),a("ul",[a("li",[t._v("不支持指针的低级语言")]),t._v(" "),a("li",[t._v("数据元素数量固定不变的场景（如操作系统的文件分配边FAT）")])])])])])}),[],!1,null,null,null);s.default=e.exports}}]);