(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{539:function(t,i,s){"use strict";s.r(i);var l=s(6),v=Object(l.a)({},(function(){var t=this,i=t.$createElement,s=t._self._c||i;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"数据"}},[t._v("数据")]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"title"}),s("p",[t._v("数据是信息的载体，是描述客观事物属性的数、字符以及所有==能输入到计算机中并能被计算机程序识别和处理的符号集合。数据是计算机程序加工的原料。")])]),s("h2",{attrs:{id:"数据元素、数据项"}},[t._v("数据元素、数据项")]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"title"}),s("p",[t._v("数据元素是数据的基本单位，通常作为一个整体进行考虑和处理。一个数据元素可由若干个数据项组成，数据项是构成数据元素的不可分割的最小单位")])]),s("p",[s("img",{attrs:{src:"https://image.icelo.cn/image-20210128213350541.png#mirages-width=581&mirages-height=235&mirages-cdn-type=1",alt:"数据元素、数据项"}})]),t._v(" "),s("h2",{attrs:{id:"数据结构、数据对象"}},[t._v("数据结构、数据对象")]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"title"}),s("p",[t._v("数据结构是相互之间存在一种或多种特定==关系==的数据元素的集合。\n数据对象是具有==相同性质==的数据元素的集合，是数据的一个子集。")])]),s("h2",{attrs:{id:"数据结构的三要素"}},[t._v("数据结构的三要素")]),t._v(" "),s("ul",[s("li",[s("h3",{attrs:{id:"逻辑结构"}},[t._v("逻辑结构")]),t._v(" "),s("ul",[s("li",[t._v("集合")])]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"title"}),s("p",[t._v("各个元素同属一个集合，别无其它关系")])]),s("ul",[s("li",[t._v("线性结构")])]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"title"}),s("p",[t._v("数据元素之间是一对一的关系，除了第一个元素，所有元素都有唯一前驱；除了最后一个元素，所有元素都有唯一后继")])]),s("ul",[s("li",[t._v("树形结构")])]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"title"}),s("p",[t._v("数据元素之间是一对多的关系")])]),s("ul",[s("li",[t._v("图状结构（网状结构）")])]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"title"}),s("p",[t._v("数据元素之间是多对多的关系")])]),s("p",[s("img",{attrs:{src:"https://image.icelo.cn/image-20210128215321867.png#mirages-width=1237&mirages-height=453&mirages-cdn-type=1",alt:"image-20210128215321867"}})])]),t._v(" "),s("li",[s("h3",{attrs:{id:"物理结构-存储结构"}},[t._v("物理结构（存储结构）")])])]),t._v(" "),s("p",[t._v("如何用计算机表示数据元素的逻辑关系？")]),t._v(" "),s("ul",[s("li",[t._v("顺序存储")])]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"title"}),s("p",[t._v("把逻辑上相邻的元素存储在物理位置上也相邻的存储单元中，元素之间的关系由存储单元上的邻接关系来体现")])]),s("ul",[s("li",[t._v("链式存储")])]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"title"}),s("p",[t._v("逻辑上相邻的元素在物理位置上可以不相邻，借助指示元素存储地址的指针来便是元素之间的逻辑关系")])]),s("ul",[s("li",[t._v("索引存储")])]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"title"}),s("p",[t._v("在存储元素信息的同时，还建立附加的索引表，索引表中的每项称为索引项，索引项的一般形式是（关键字，地址）")])]),s("ul",[s("li",[t._v("散列存储")])]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"title"}),s("p",[t._v("根据元素的关键字直接计算出该元素的存储地址，又称哈希（"),s("code",[t._v("hash")]),t._v("）存储")])]),s("ul",[s("li",[s("h3",{attrs:{id:"数据运算"}},[t._v("数据运算")])])]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"title"}),s("p",[t._v("施加在数据上的运算包括运算的定义和实现。运算的定义是针对逻辑结构的，指出运算的功能：运算的是现实是针对存储结构的，指出运算的具体操作步骤")]),t._v(" "),s("p",[s("strong",[t._v("举例")])]),t._v(" "),s("p",[t._v("逻辑结构--线性结构（队列）\n结合现实需求定义队列这种逻辑结构的运算")]),t._v(" "),s("ul",[s("li",[t._v("队头元素出队")]),t._v(" "),s("li",[t._v("新元素入队")]),t._v(" "),s("li",[t._v("输出队列长度")])]),t._v(" "),s("p",[s("strong",[t._v("总结")])]),t._v(" "),s("p",[t._v("若采用顺序存储，则各个数据元素在物理上必须是连续的;若采用非顺序存储，则各个数据元素在物理上可以是离散的。")]),t._v(" "),s("ul",[s("li",[t._v("数据的存储结构会影响存储空间分配的方便程度")]),t._v(" "),s("li",[t._v("数据的存储结构会影响数据运算的速度")])])]),s("h2",{attrs:{id:"数据类型"}},[t._v("数据类型")]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"title"}),s("p",[t._v("数据类型是一个值的集合和定义在此集合上的一组操作的总称")]),t._v(" "),s("ul",[s("li",[t._v("原子类型：其值不可再分的数据类型。\n"),s("ul",[s("li",[t._v("bool类型：\n"),s("ul",[s("li",[t._v("值的范围：true、false")]),t._v(" "),s("li",[t._v("可以进行的操作：与、或、非……")])])]),t._v(" "),s("li",[t._v("int类型：\n"),s("ul",[s("li",[t._v("值的范围：不同的语言不同")]),t._v(" "),s("li",[t._v("可进行的操作：加、减、乘、除……")])])])])]),t._v(" "),s("li",[t._v("结构类型：\n"),s("ul",[s("li",[s("code",[t._v("struct")]),t._v(" "),s("ul",[s("li",[t._v("需要根据具体的业务需求来确定值的范围，可进行的操作")])])])])])])]),s("h2",{attrs:{id:"抽象数据类型-abstract-data-type-adt"}},[t._v("抽象数据类型（Abstract Data Type，ADT）")]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"title"}),s("p",[t._v("是抽象数据组织及与之相关的操作")]),t._v(" "),s("ul",[s("li",[t._v("ADT 用数学化的语言定义数据的逻辑结构、定义运算。与具体的实现无关。")])]),t._v(" "),s("p",[t._v("在探讨一个数据结构时：")]),t._v(" "),s("ul",[s("li",[t._v("定义逻辑结构：\n"),s("ul",[s("li",[t._v("数据元素之间的关系")])])]),t._v(" "),s("li",[t._v("定义数据的运算\n"),s("ul",[s("li",[t._v("针对实现需求应该对逻辑结构进行什么样的运算")]),t._v(" "),s("li",[t._v("确定某种存储结构，实现数据结构，并实现一些数据结构的基本运算")])])])])])])}),[],!1,null,null,null);i.default=v.exports}}]);